{"ast":null,"code":"(function () {\n  \"use strict\";\n\n  try {\n    if (typeof document < \"u\") {\n      var e = document.createElement(\"style\");\n      e.appendChild(document.createTextNode('.ce-delimiter{line-height:1.6em;width:100%;text-align:center}.ce-delimiter:before{display:inline-block;content:\"***\";font-size:30px;line-height:65px;height:30px;letter-spacing:.2em}')), document.head.appendChild(e);\n    }\n  } catch (t) {\n    console.error(\"vite-plugin-css-injected-by-js\", t);\n  }\n})();\nconst r = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><line x1=\"6\" x2=\"10\" y1=\"12\" y2=\"12\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"/><line x1=\"14\" x2=\"18\" y1=\"12\" y2=\"12\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"/></svg>';\n/**\n * Delimiter Block for the Editor.js.\n *\n * @author CodeX (team@ifmo.su)\n * @copyright CodeX 2018\n * @license The MIT License (MIT)\n * @version 2.0.0\n */\nclass o {\n  /**\n   * Notify core that read-only mode is supported\n   * @return {boolean}\n   */\n  static get isReadOnlySupported() {\n    return !0;\n  }\n  /**\n   * Allow Tool to have no content\n   * @return {boolean}\n   */\n  static get contentless() {\n    return !0;\n  }\n  /**\n   * Render plugin`s main Element and fill it with saved data\n   *\n   * @param {{data: DelimiterData, config: object, api: object}}\n   *   data — previously saved data\n   *   config - user config for Tool\n   *   api - Editor.js API\n   */\n  constructor(_ref) {\n    let {\n      data: t,\n      config: s,\n      api: e\n    } = _ref;\n    this.api = e, this._CSS = {\n      block: this.api.styles.block,\n      wrapper: \"ce-delimiter\"\n    }, this._data = {}, this._element = this.drawView(), this.data = t;\n  }\n  /**\n   * Create Tool's view\n   * @return {HTMLElement}\n   * @private\n   */\n  drawView() {\n    let t = document.createElement(\"DIV\");\n    return t.classList.add(this._CSS.wrapper, this._CSS.block), t;\n  }\n  /**\n   * Return Tool's view\n   * @returns {HTMLDivElement}\n   * @public\n   */\n  render() {\n    return this._element;\n  }\n  /**\n   * Extract Tool's data from the view\n   * @param {HTMLDivElement} toolsContent - Paragraph tools rendered view\n   * @returns {DelimiterData} - saved data\n   * @public\n   */\n  save(t) {\n    return {};\n  }\n  /**\n   * Get Tool toolbox settings\n   * icon - Tool icon's SVG\n   * title - title to show in toolbox\n   *\n   * @return {{icon: string, title: string}}\n   */\n  static get toolbox() {\n    return {\n      icon: r,\n      title: \"Delimiter\"\n    };\n  }\n}\nexport { o as default };","map":{"version":3,"names":["document","e","createElement","appendChild","createTextNode","head","t","console","error","r","o","isReadOnlySupported","contentless","constructor","_ref","data","config","s","api","_CSS","block","styles","wrapper","_data","_element","drawView","classList","add","render","save","toolbox","icon","title","default"],"sources":["F:/Github/magiqpad/client/node_modules/@editorjs/delimiter/dist/delimiter.mjs"],"sourcesContent":["(function(){\"use strict\";try{if(typeof document<\"u\"){var e=document.createElement(\"style\");e.appendChild(document.createTextNode('.ce-delimiter{line-height:1.6em;width:100%;text-align:center}.ce-delimiter:before{display:inline-block;content:\"***\";font-size:30px;line-height:65px;height:30px;letter-spacing:.2em}')),document.head.appendChild(e)}}catch(t){console.error(\"vite-plugin-css-injected-by-js\",t)}})();\nconst r = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\"><line x1=\"6\" x2=\"10\" y1=\"12\" y2=\"12\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"/><line x1=\"14\" x2=\"18\" y1=\"12\" y2=\"12\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-width=\"2\"/></svg>';\n/**\n * Delimiter Block for the Editor.js.\n *\n * @author CodeX (team@ifmo.su)\n * @copyright CodeX 2018\n * @license The MIT License (MIT)\n * @version 2.0.0\n */\nclass o {\n  /**\n   * Notify core that read-only mode is supported\n   * @return {boolean}\n   */\n  static get isReadOnlySupported() {\n    return !0;\n  }\n  /**\n   * Allow Tool to have no content\n   * @return {boolean}\n   */\n  static get contentless() {\n    return !0;\n  }\n  /**\n   * Render plugin`s main Element and fill it with saved data\n   *\n   * @param {{data: DelimiterData, config: object, api: object}}\n   *   data — previously saved data\n   *   config - user config for Tool\n   *   api - Editor.js API\n   */\n  constructor({ data: t, config: s, api: e }) {\n    this.api = e, this._CSS = {\n      block: this.api.styles.block,\n      wrapper: \"ce-delimiter\"\n    }, this._data = {}, this._element = this.drawView(), this.data = t;\n  }\n  /**\n   * Create Tool's view\n   * @return {HTMLElement}\n   * @private\n   */\n  drawView() {\n    let t = document.createElement(\"DIV\");\n    return t.classList.add(this._CSS.wrapper, this._CSS.block), t;\n  }\n  /**\n   * Return Tool's view\n   * @returns {HTMLDivElement}\n   * @public\n   */\n  render() {\n    return this._element;\n  }\n  /**\n   * Extract Tool's data from the view\n   * @param {HTMLDivElement} toolsContent - Paragraph tools rendered view\n   * @returns {DelimiterData} - saved data\n   * @public\n   */\n  save(t) {\n    return {};\n  }\n  /**\n   * Get Tool toolbox settings\n   * icon - Tool icon's SVG\n   * title - title to show in toolbox\n   *\n   * @return {{icon: string, title: string}}\n   */\n  static get toolbox() {\n    return {\n      icon: r,\n      title: \"Delimiter\"\n    };\n  }\n}\nexport {\n  o as default\n};\n"],"mappings":"AAAA,CAAC,YAAU;EAAC,YAAY;;EAAC,IAAG;IAAC,IAAG,OAAOA,QAAQ,GAAC,GAAG,EAAC;MAAC,IAAIC,CAAC,GAACD,QAAQ,CAACE,aAAa,CAAC,OAAO,CAAC;MAACD,CAAC,CAACE,WAAW,CAACH,QAAQ,CAACI,cAAc,CAAC,uLAAuL,CAAC,CAAC,EAACJ,QAAQ,CAACK,IAAI,CAACF,WAAW,CAACF,CAAC,CAAC;IAAA;EAAC,CAAC,QAAMK,CAAC,EAAC;IAACC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAACF,CAAC,CAAC;EAAA;AAAC,CAAC,EAAE,CAAC;AACxZ,MAAMG,CAAC,GAAG,gTAAgT;AAC1T;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,CAAC,CAAC;EACN;AACF;AACA;AACA;EACE,WAAWC,mBAAmBA,CAAA,EAAG;IAC/B,OAAO,CAAC,CAAC;EACX;EACA;AACF;AACA;AACA;EACE,WAAWC,WAAWA,CAAA,EAAG;IACvB,OAAO,CAAC,CAAC;EACX;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAAAC,IAAA,EAAiC;IAAA,IAAhC;MAAEC,IAAI,EAAET,CAAC;MAAEU,MAAM,EAAEC,CAAC;MAAEC,GAAG,EAAEjB;IAAE,CAAC,GAAAa,IAAA;IACxC,IAAI,CAACI,GAAG,GAAGjB,CAAC,EAAE,IAAI,CAACkB,IAAI,GAAG;MACxBC,KAAK,EAAE,IAAI,CAACF,GAAG,CAACG,MAAM,CAACD,KAAK;MAC5BE,OAAO,EAAE;IACX,CAAC,EAAE,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAACV,IAAI,GAAGT,CAAC;EACpE;EACA;AACF;AACA;AACA;AACA;EACEmB,QAAQA,CAAA,EAAG;IACT,IAAInB,CAAC,GAAGN,QAAQ,CAACE,aAAa,CAAC,KAAK,CAAC;IACrC,OAAOI,CAAC,CAACoB,SAAS,CAACC,GAAG,CAAC,IAAI,CAACR,IAAI,CAACG,OAAO,EAAE,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC,EAAEd,CAAC;EAC/D;EACA;AACF;AACA;AACA;AACA;EACEsB,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAACJ,QAAQ;EACtB;EACA;AACF;AACA;AACA;AACA;AACA;EACEK,IAAIA,CAACvB,CAAC,EAAE;IACN,OAAO,CAAC,CAAC;EACX;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,WAAWwB,OAAOA,CAAA,EAAG;IACnB,OAAO;MACLC,IAAI,EAAEtB,CAAC;MACPuB,KAAK,EAAE;IACT,CAAC;EACH;AACF;AACA,SACEtB,CAAC,IAAIuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}