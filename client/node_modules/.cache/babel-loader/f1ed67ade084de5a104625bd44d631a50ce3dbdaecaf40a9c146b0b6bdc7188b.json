{"ast":null,"code":"import axios from\"axios\";import{toast}from\"react-toastify\";import{apiBaseUrl}from\"../config\";import{apiDelete,apiGet,apiPatch,apiPost,apiPut}from\"../utils/axios\";export const projectList=async()=>{try{const res=await apiGet(\"\".concat(apiBaseUrl,\"/projects/\"));if(res.status<299){return res.data;}else{return null;}}catch(err){return[];// if(err?.response?.status === 401 ) return toast.error('Invalid email and password')\n//  return toast.error('Something went wrong')\n}};export const createProject=async data=>{try{const res=await apiPost(\"\".concat(apiBaseUrl,\"/projects/\"),data);if(res.status<299){return res.data;}else{return null;}}catch(err){return[];// if(err?.response?.status === 401 ) return toast.error('Invalid email and password')\n//  return toast.error('Something went wrong')\n}};export const projectDetails=async id=>{try{const res=await apiGet(\"\".concat(apiBaseUrl,\"/projects/\").concat(id,\"/\"));if(res.status<299){return res.data;}else{return null;}}catch(err){return null;//  return toast.error('Something went wrong')\n}};export const projectDelete=async id=>{try{const res=await apiDelete(\"\".concat(apiBaseUrl,\"/projects/\").concat(id,\"/\"));if(res.status<299){return res.data;}else{return null;}}catch(err){return null;//  return toast.error('Something went wrong')\n}};export const projectUpdate=async(id,payload,setIsLoading)=>{try{setIsLoading(true);const res=await apiPatch(\"\".concat(apiBaseUrl,\"/projects/\").concat(id,\"/\"),payload);setIsLoading(false);if(res.status<299){return res.data;}else{return null;}}catch(err){setIsLoading(false);return null;//  return toast.error('Something went wrong')\n}};","map":{"version":3,"names":["axios","toast","apiBaseUrl","apiDelete","apiGet","apiPatch","apiPost","apiPut","projectList","res","concat","status","data","err","createProject","projectDetails","id","projectDelete","projectUpdate","payload","setIsLoading"],"sources":["F:/Github/magiqpad/client/src/services/project.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { apiBaseUrl } from \"../config\";\nimport { apiDelete, apiGet, apiPatch, apiPost, apiPut } from \"../utils/axios\";\n\n\nexport const projectList = async () => {\n    try{\n        const res = await apiGet(`${apiBaseUrl}/projects/`)\n        if (res.status < 299) {\n            return res.data;\n        } else {\n\n            return null;\n        }\n    }\n    catch(err){\n        return []\n        // if(err?.response?.status === 401 ) return toast.error('Invalid email and password')\n        //  return toast.error('Something went wrong')\n    }\n \n}\n\n\nexport const createProject = async (data) => {\n    try{\n        const res = await apiPost(`${apiBaseUrl}/projects/`, data);\n        if (res.status < 299) {\n            return res.data;\n        } else {\n\n            return null;\n        }\n    }\n    catch(err){\n        return []\n        // if(err?.response?.status === 401 ) return toast.error('Invalid email and password')\n        //  return toast.error('Something went wrong')\n    }\n \n}\n\nexport const projectDetails = async (id) => {\n  try{\n      const res = await apiGet(`${apiBaseUrl}/projects/${id}/`)\n      if (res.status < 299) {\n          return res.data;\n      } else {\n\n          return null;\n      }\n  }\n  catch(err){\n      return null\n\n      //  return toast.error('Something went wrong')\n  }\n}; \n\n\nexport const projectDelete = async (id) => {\n  try{\n      const res = await apiDelete(`${apiBaseUrl}/projects/${id}/`);\n      if (res.status < 299) {\n          return res.data;\n      } else {\n\n          return null;\n      }\n  }\n  catch(err){\n      return null\n\n      //  return toast.error('Something went wrong')\n  }\n}; \n\n\nexport const projectUpdate = async (id, payload, setIsLoading) => {\n  try{\n    setIsLoading(true)\n      const res = await apiPatch(`${apiBaseUrl}/projects/${id}/`, payload)\n      setIsLoading(false)\n      if (res.status < 299) {\n          return res.data;\n      } else {\n\n          return null;\n      }\n  }\n  catch(err){\n    setIsLoading(false)\n\n      return null\n\n      //  return toast.error('Something went wrong')\n  }\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,UAAU,KAAQ,WAAW,CACtC,OAASC,SAAS,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,MAAM,KAAQ,gBAAgB,CAG7E,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAG,CACC,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAL,MAAM,IAAAM,MAAA,CAAIR,UAAU,cAAY,CAAC,CACnD,GAAIO,GAAG,CAACE,MAAM,CAAG,GAAG,CAAE,CAClB,MAAO,CAAAF,GAAG,CAACG,IAAI,CACnB,CAAC,IAAM,CAEH,MAAO,KAAI,CACf,CACJ,CACA,MAAMC,GAAG,CAAC,CACN,MAAO,EAAE,CACT;AACA;AACJ,CAEJ,CAAC,CAGD,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAF,IAAI,EAAK,CACzC,GAAG,CACC,KAAM,CAAAH,GAAG,CAAG,KAAM,CAAAH,OAAO,IAAAI,MAAA,CAAIR,UAAU,eAAcU,IAAI,CAAC,CAC1D,GAAIH,GAAG,CAACE,MAAM,CAAG,GAAG,CAAE,CAClB,MAAO,CAAAF,GAAG,CAACG,IAAI,CACnB,CAAC,IAAM,CAEH,MAAO,KAAI,CACf,CACJ,CACA,MAAMC,GAAG,CAAC,CACN,MAAO,EAAE,CACT;AACA;AACJ,CAEJ,CAAC,CAED,MAAO,MAAM,CAAAE,cAAc,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC1C,GAAG,CACC,KAAM,CAAAP,GAAG,CAAG,KAAM,CAAAL,MAAM,IAAAM,MAAA,CAAIR,UAAU,eAAAQ,MAAA,CAAaM,EAAE,KAAG,CAAC,CACzD,GAAIP,GAAG,CAACE,MAAM,CAAG,GAAG,CAAE,CAClB,MAAO,CAAAF,GAAG,CAACG,IAAI,CACnB,CAAC,IAAM,CAEH,MAAO,KAAI,CACf,CACJ,CACA,MAAMC,GAAG,CAAC,CACN,MAAO,KAAI,CAEX;AACJ,CACF,CAAC,CAGD,MAAO,MAAM,CAAAI,aAAa,CAAG,KAAO,CAAAD,EAAE,EAAK,CACzC,GAAG,CACC,KAAM,CAAAP,GAAG,CAAG,KAAM,CAAAN,SAAS,IAAAO,MAAA,CAAIR,UAAU,eAAAQ,MAAA,CAAaM,EAAE,KAAG,CAAC,CAC5D,GAAIP,GAAG,CAACE,MAAM,CAAG,GAAG,CAAE,CAClB,MAAO,CAAAF,GAAG,CAACG,IAAI,CACnB,CAAC,IAAM,CAEH,MAAO,KAAI,CACf,CACJ,CACA,MAAMC,GAAG,CAAC,CACN,MAAO,KAAI,CAEX;AACJ,CACF,CAAC,CAGD,MAAO,MAAM,CAAAK,aAAa,CAAG,KAAAA,CAAOF,EAAE,CAAEG,OAAO,CAAEC,YAAY,GAAK,CAChE,GAAG,CACDA,YAAY,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAX,GAAG,CAAG,KAAM,CAAAJ,QAAQ,IAAAK,MAAA,CAAIR,UAAU,eAAAQ,MAAA,CAAaM,EAAE,MAAKG,OAAO,CAAC,CACpEC,YAAY,CAAC,KAAK,CAAC,CACnB,GAAIX,GAAG,CAACE,MAAM,CAAG,GAAG,CAAE,CAClB,MAAO,CAAAF,GAAG,CAACG,IAAI,CACnB,CAAC,IAAM,CAEH,MAAO,KAAI,CACf,CACJ,CACA,MAAMC,GAAG,CAAC,CACRO,YAAY,CAAC,KAAK,CAAC,CAEjB,MAAO,KAAI,CAEX;AACJ,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}