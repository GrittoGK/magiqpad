{"ast":null,"code":"import axios from\"axios\";import{toast}from\"react-toastify\";import{apiBaseUrl,authBaseUrl}from\"../config\";import{apiGet}from\"../utils/axios\";export const getAuthToken=()=>{const tokens=localStorage.getItem('token');if(tokens){const parsedTokens=JSON.parse(tokens)||{};return parsedTokens.access;}return null;};export const getUser=()=>{const userStr=localStorage.getItem('user');if(userStr){const user=JSON.parse(userStr)||{};return user;}return null;};export const login=async(email,password)=>{try{const res=await axios.post(\"\".concat(authBaseUrl,\"/token/\"),{username:email,password});if(res.status<299){localStorage.setItem('token',JSON.stringify(res.data));const user=await apiGet(\"\".concat(apiBaseUrl,\"/users/get-me/\"));localStorage.setItem('user',JSON.stringify(user===null||user===void 0?void 0:user.data));window.location.href='/projects';}else{return null;}}catch(err){var _err$response;// navigate('/projects')\nreturn null;if((err===null||err===void 0?void 0:(_err$response=err.response)===null||_err$response===void 0?void 0:_err$response.status)===401)return toast.error('Invalid email and password');return toast.error('Something went wrong');}};export const register=async(name,email,password,nevigate)=>{try{if(!email||!name||!password){window.alert(\"All Fields are required\");}const res=await axios.post(\"\".concat(apiBaseUrl,\"/users/\"),{username:email,email,password,first_name:name});if(res.status<299){nevigate('/login');}else{console.log(res);return null;}}catch(err){return null;}};","map":{"version":3,"names":["axios","toast","apiBaseUrl","authBaseUrl","apiGet","getAuthToken","tokens","localStorage","getItem","parsedTokens","JSON","parse","access","getUser","userStr","user","login","email","password","res","post","concat","username","status","setItem","stringify","data","window","location","href","err","_err$response","response","error","register","name","nevigate","alert","first_name","console","log"],"sources":["F:/Github/magiqpad/client/src/services/auth.js"],"sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { apiBaseUrl, authBaseUrl } from \"../config\";\nimport { apiGet } from \"../utils/axios\";\n\nexport const getAuthToken = () => {\n    const tokens = localStorage.getItem('token');\n    if (tokens) {\n        const parsedTokens = JSON.parse(tokens) || {};\n        return parsedTokens.access;\n    }\n    return null;\n};\n\n\nexport const getUser = () => {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n        const user = JSON.parse(userStr) || {};\n        return user;\n    }\n    return null;\n};\n\nexport const login = async (email, password) => {\n    try{\n        const res = await axios.post(`${authBaseUrl}/token/`, {username: email, password});\n        if (res.status < 299) {\n            localStorage.setItem('token',JSON.stringify( res.data));\n           const user = await apiGet(`${apiBaseUrl}/users/get-me/`)\n        localStorage.setItem('user', JSON.stringify(user?.data));\n            window.location.href = '/projects'\n        } else {\n\n            return null;\n        }\n    }\n    catch(err){\n        // navigate('/projects')\n\n        return null\n        if(err?.response?.status === 401 ) return toast.error('Invalid email and password')\n         return toast.error('Something went wrong')\n    }\n \n}; \n\nexport const register = async (name, email, password, nevigate) => {\n    try{\n        if (!email || !name || !password) {\n            window.alert(\"All Fields are required\");\n        }\n        const res = await axios.post(`${apiBaseUrl}/users/`, {username: email, email, password, first_name: name});\n        if (res.status < 299) {\n            nevigate('/login');\n        } else {\n            console.log(res);\n            return null;\n        }\n    }\n    catch(err){\n        return null\n    }\n \n}; \n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}